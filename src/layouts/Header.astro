---
import Container from "../layouts/Container.astro";
const {
  name,
  description,
  breadcrumbs,
  primaryButton,
  secondaryButton,
  updated,
  reviewed,
} = Astro.props;
---

<div class="bg-gradient-to-br from-gray-900 via-violet-900 to-amber-700 mb-10">
  <Container>
    <div class="py-14 flex flex-col gap-12">
      <div class="flex flex-row gap-5 justify-between">
        <nav class="flex" aria-label="Breadcrumb">
          <ol role="list" class="flex items-center space-x-4">
            <li>
              <div>
                <a
                  href="/"
                  class="hover:text-violet-200 text-violet-300 transition"
                >
                  <i class="fa-solid fa-house text-xs"></i>
                  <span class="sr-only">UnLtd</span>
                </a>
              </div>
            </li>

            {
              breadcrumbs.map((crumb) => (
                <li>
                  <div class="flex items-center">
                    <i class="fa-solid fa-chevron-right text-violet-300 text-xs" />
                    <a
                      href={crumb.slug}
                      class="ml-4 text-xs font-medium hover:text-violet-200 text-violet-300 transition"
                    >
                      {crumb.name}
                    </a>
                  </div>
                </li>
              ))
            }
          </ol>
        </nav>

        {
          reviewed && (
            <div class="flex flex-row gap-10">
              {updated && (
                <div>
                  <p class="text-violet-300 text-xs">Updated</p>
                  <p class="text-violet-300 text-sm">
                    {new Date(updated).toLocaleDateString()}
                  </p>
                </div>
              )}

              {updated && (
                <div>
                  <p class="text-violet-300 text-xs">Reviewed</p>
                  <p class="text-violet-300 text-sm">
                    {new Date(reviewed).toLocaleDateString()}
                  </p>
                </div>
              )}
            </div>
          )
        }
      </div>

      <div class="max-w-4xl flex flex-col gap-3">
        <div class="flex flex-col gap-1">
          <h2
            class="text-4xl font-bold tracking-tight text-white sm:text-5xl lg:text-6xl"
          >
            {name}
          </h2>
          <p class="text-2xl text-violet-300">
            {description}
          </p>
        </div>
      </div>

      {
        primaryButton && (
          <div class="flex flex-row">
            <div class="inline-flex rounded-md shadow">
              {primaryButton && (
                <a
                  target={primaryButton.url.startsWith("https://") && "_blank"}
                  href={primaryButton.url}
                  class="inline-flex items-center justify-center rounded-full border border-transparent bg-violet-600 px-5 py-3 text-base font-medium text-white hover:bg-violet-700"
                >
                  {primaryButton.text}
                </a>
              )}
            </div>
            <div class="ml-3 inline-flex">
              {secondaryButton && (
                <a
                  href={secondaryButton.url}
                  class="inline-flex items-center justify-center rounded-full border border-transparent bg-violet-100 px-5 py-3 text-base font-medium text-violet-700 hover:bg-violet-200"
                >
                  {secondaryButton.text}
                </a>
              )}
            </div>
          </div>
        )
      }
    </div>
  </Container>
</div>
