---
import Fields from "../../components/form/Fields.astro";
const { sections, fields } = Astro.props;

import { marked } from "marked";
---

<main
  class="col-span-12 md:col-span-9 lg:col-span-5 lg:auto-cols-fr flex flex-col gap-4"
>
  {
    sections.map((section, index) => {
      return (
        <>
          <form
            action="#"
            id={section.slug}
            method="POST"
            class="shadow-xl sm:overflow-hidden rounded-md flex flex-col gap-10 bg-white"
          >
            <div class="bg-gray-100 p-10 sticky top-0">
              <div class="flex flex-row gap-3 items-center">
                <span class="text-gray-600 border-full h-8 w-8 bg-white flex justify-center items-center rounded-full">
                  {index + 1}
                </span>
                <h3 class="text-lg font-medium leading-6 text-gray-700">
                  {section.name}
                </h3>
              </div>

              {section.description && (
                <div
                  class="mt-2 text-sm text-gray-500 leading-relaxed prose"
                  id={`${section.slug}-description}`}
                  set:html={marked.parse(section.description)}
                />
              )}
            </div>
            <div class="flex flex-col gap-10 pb-10 px-10">
              {fields.map((field) => {
                if (
                  field.sections.length == 1 &&
                  field.sections == section.id
                ) {
                  return (
                    <>
                      <Fields
                        name={field.name}
                        description={field.description}
                        slug={field.slug}
                        type={field.type}
                        input_type={field.input_type}
                        required={field.required}
                        disabled={field.disabled}
                        options={field.select_options}
                        max_length={field.max_length}
                        prefix={field.prefix}
                        suffix={field.suffix}
                      />
                    </>
                  );
                } else if (field.sections.length > 1) {
                  let sectionFields = field.sections.filter(
                    (fieldsection) => fieldsection == section.id
                  );

                  if (sectionFields.length == 1) {
                    return (
                      <>
                        <Fields
                          name={field.name}
                          description={field.description}
                          slug={field.slug}
                          type={field.type}
                          input_type={field.input_type}
                          required={field.required}
                          disabled={field.disabled}
                          options={field.select_options}
                          max_length={field.max_length}
                          prefix={field.prefix}
                          suffix={field.suffix}
                        />
                      </>
                    );
                  }
                }
              })}
            </div>
          </form>
        </>
      );
    })
  }
</main>
