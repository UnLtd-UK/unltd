---
import truncate from "truncate";
const { image, icon, colour, name, blurb, slug, features, eligibility } =
  Astro.props;
---

<article
  class={`relative isolate flex flex-col justify-between gap-4 overflow-hidden rounded-2xl px-8 py-10 w-1/3 shadow-lg shadow-${colour}-500/20 hover:shadow-${colour}-500/30 transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-105 duration-300`}
>
  <div class="flex flex-col gap-2">
    <img
      src={`https://unltd.directus.app/assets/${image}`}
      alt=""
      class="absolute inset-0 -z-10 h-full w-full object-cover brightness-50 blur-xs opacity-30"
    />
    <div
      class={`absolute inset-0 -z-10 bg-gradient-to-t from-${colour}-500/80 to-${colour}-700/20 dark:from-${colour}-700/80 dark:to-${colour}-900/20`}
    >
    </div>
    <div class={`absolute inset-0 -z-10 rounded-2xl`}></div>

    <div>
      <span class="relative inline-block">
        <div
          class={`flex items-center justify-center h-14 w-14 rounded-md bg-${colour}-600 dark:bg-${colour}-400`}
        >
          <i
            class={`${icon} text-${colour}-200 dark:text-${colour}-800 text-2xl`}
          ></i>
        </div>
      </span>
      <h3 class={`mt-3 font-semibold leading-6 text-${colour}-50`}>
        <a href={`/award/${slug}`}>
          <span class="absolute inset-0"></span>
          <p class="text-lg">{name}</p>
        </a>
      </h3>
      {
        blurb && (
          <p class={`text-${colour}-100/80 text-xs`}>{truncate(blurb, 100)}</p>
        )
      }
    </div>

    <div class="flex flex-col gap-3">
      {
        features.map((item) => (
          <div key={item.name}>
            <p class={`truncate text-sm font-medium flex gap-2 items-center`}>
              <i
                class={`${item.icon} text-${colour}-100 dark:text-${colour}-200`}
              />
              <span class={`text-${colour}-50 dark:text-${colour}-100`}>
                {item.name}
              </span>
            </p>
          </div>
        ))
      }
    </div>
  </div>

  <div class={`flex flex-col gap-3 bg-slate-700/50 rounded-md p-5`}>
    <p class={`text-sm text-${colour}-100 dark:text-${colour}-200`}>
      Your eligibility:
    </p>
    {
      eligibility.map((item) => (
        <div key={item.name}>
          <p
            class={`truncate text-xs font-medium uppercase flex gap-2 items-center`}
          >
            <i
              class={`${item.icon} text-${colour}-100 dark:text-${colour}-200`}
            />
            <span class={`text-${colour}-100 dark:text-${colour}-200`}>
              {item.name}
            </span>
          </p>
          <p
            class={`mt-1 text-sm font-semibold tracking-tight text-${colour}-50`}
          >
            {item.value}
          </p>
        </div>
      ))
    }
  </div>
</article>
