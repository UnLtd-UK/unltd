---
import { Code } from "astro:components";
import { marked } from "marked";
import Container from "../../components/Container.astro"

import { steps } from "../../data/steps.js";

import slugify from "slugify";
---

<Container light="violet-100" dark="violet-900">
<div class="py-20 flex flex-col gap-20">
  <div>
    <h2
      id="apply"
      class="text-base font-semibold leading-7 text-amber-500 dark:text-amber-500"
    >
      Apply
    </h2>
    <p
      class="mt-2 text-4xl font-bold tracking-tight text-violet-950 dark:text-violet-100 sm:text-5xl"
    >
      How to apply for an Award
    </p>
  <p
    class="mt-6 max-w-2xl text-lg leading-8 text-violet-800 dark:text-violet-200"
  >
Read through all of the following steps to guide you in your application. We are committed to using our resources to drive change.
        At least 50% of our Awards will support social entrepreneurs who come from
        a disabled and/or Black, Asian or minority ethnic background.
  </p>
</div>
<div
  class="w-full"
  x-init="checkUrl()"
  x-data="{ activeTab: 'tab0', checkUrl: function() { let element = window.location.hash ? document.getElementById(window.location.hash.substring(1)) : null; element && element.tagName === 'BUTTON' ? element.click() : null; }, urlUpdater: function(slug) { history.pushState(null, null, `/award#${slug}`); const targetElement = document.getElementById(slug); if (targetElement) { targetElement.scrollIntoView({ behavior: 'smooth' }); } }, selectHs: function(i) {document.getElementById('tabs').value = `tab${i}` }, tabClass: function(i) { return this.activeTab === `tab${i}` ? 'border-b-4 border-b-amber-500' : 'bg-violet-50'}}"
>
  <div class="lg:hidden">
    <label for="tabs" class="sr-only">Select a tab</label>
    <select
    @change="activeTab = $event.target.value"
      id="tabs"
      name="tabs"
      class="block w-full rounded-md border-violet-300 focus:border-amber-500 focus:ring-amber-500"
    >
      {
        steps.map((step, i) => (
          <option value={`tab${i}`} selected={i == 0 && true}>
            {i + 1}. {step.name}
          </option>
        ))
      }
    </select>
  </div>
  <div class="hidden lg:block">
    <nav class="flex space-x-4" aria-label="Tabs">
      {
        steps.map((step, i) => (
          <button id={`${slugify(step.name, {lower: true, strict: true, locale: "en", trim: true,})}`}
            @click={`activeTab = 'tab${i}', selectHs('${i}'), urlUpdater('${slugify(step.name, {lower: true, strict: true, locale: "en", trim: true,})}')`}
            :class={`tabClass(${i})`}
            class={`flex-1 flex flex-col gap-3 justify-start items-center group rounded-t-md px-3 py-5 h-28 bg-violet-100 dark:bg-violet-950 dark:hover:border-b-4 dark:hover:border-b-amber-500/20 duration-200 shadow-3xl`}
          >
            <span
              class={`text-sm font-bold rounded-full h-6 w-6 flex justify-center items-center outline bg-violet-300 outline-violet-700 dark:outline-violet-300 text-violet-600 dark:text-violet-800`}
            >
              {i + 1}
            </span>

            <div class="flex-auto flex flex-col items-center justify-center">
              <span class={`text-sm font-medium text-violet-700 dark:text-violet-300`}>
                {step.name}
              </span>
            </div>
          </button>
        ))
      }
    </nav>
  </div>
  {
    steps.map((step, i) => (
      <div x-show={`activeTab === 'tab${i}'`} class={`bg-violet-100 dark:bg-violet-950 rounded-b-md border-2 border-violet-300 dark:border-violet-700 shadow-sm`} x-cloak>
        <div
          class={`px-10 py-6 ${i==0 && "rounded-tr-md"} ${i==4 && "rounded-tl-md"}`}
        >
        <div class={`prose prose-slate dark:prose-invert prose-sm prose-img:rounded-md prose-img:shadow-sm prose-img:w-full prose-a:font-bold prose-a:underline-offset-4 prose-a:decoration-amber-500 prose-a:decoration-1 hover:prose-a:decoration-2`} set:html={marked.parse(step.body)}></div>
        </div>
        <div class="rounded-b-md border-t border-violet-100 dark:border-violet-900 px-10 py-6 flex justify-between items-center">
          { step.button && <button type="button" @click={`activeTab = 'tab${i+1}', selectHs('${i+1}'), urlUpdater('${slugify(steps[i+1].name, {lower: true, strict: true, locale: "en", trim: true,})}')`} class="rounded-full bg-amber-600 px-4 py-2.5 font-semibold text-violet-50 shadow-sm hover:bg-amber-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-amber-600 flex gap-2 items-center"><i class="fa-regular fa-circle-check text-lg"></i><span class="text-sm">{step.button}</span></button> }
        { step.alt && <a href={step.alt.link} class="flex gap-2 items-center"><i class="fa-solid fa-circle-question text-violet-500 dark:text-violet-300 text-lg"></i> <span class="text-violet-600 dark:text-violet-300 text-sm">{step.alt.name}</span></a> }
        </div>
      </div>
      ))
  }
</div>
</Container>