---
const { name, description, slug, required, disabled, max_length, number } =
  Astro.props;
import { marked } from "marked";
marked.use({ mangle: false, headerIds: false });

let markdown;
if (description != null) {
  markdown = marked.parse(description);
}
---

<div>
  <div class="flex justify-between">
    <label for={slug} class="block text-sm font-medium text-violet-700"
      ><span class="text-violet-400 text-sm mr-1">{number}.</span> {name}</label
    >
    <span class="text-sm text-violet-500" id="email-required"
      >{required === "true" && `Required`}</span
    >
  </div>
  <div
    class="mt-2 text-sm text-violet-500 leading-relaxed prose"
    id={`${slug}-description}`}
    set:html={markdown}
  />
  <div class="mt-1 sm:col-span-2 sm:mt-0">
    <textarea
      id="about"
      name="about"
      rows="3"
      class="mt-1 block w-full max-w-lg rounded-md text-violet-950 border-violet-300 shadow-sm focus:border-amber-500 focus:ring-amber-500 sm:text-sm disabled:cursor-not-allowed disabled:border-violet-200 disabled:bg-violet-100 disabled:text-violet-500"
      disabled={disabled}></textarea>
    {
      max_length && (
        <div class="text-xs p-2 rounded-md flex flex-row justify-between">
          <span class="text-xs text-violet-500 tracking-tight uppercase">
            Character count
          </span>
          <span class="text-violet-500 text-xs">0 / {max_length}</span>
        </div>
      )
    }
  </div>
</div>
