---
const { name, description, slug, required, disabled, options, number, alias } =
  Astro.props;
import { marked } from "marked";
marked.use({ mangle: false, headerIds: false });
let markdown;
if (description != null) {
  markdown = marked.parse(description);
}
---

<div>
  <div class="flex justify-between">
    <label for={slug} class="block text-sm font-medium text-slate-700"
      ><span class="text-slate-400 text-sm mr-1">{number}.</span> {name}</label
    >
    <span class="text-sm text-slate-400" id="email-required"
      >{required == true && `Required`}</span
    >
  </div>
  <div
    class="mt-2 text-sm text-slate-500 leading-relaxed prose"
    id={`${slug}-description}`}
    set:html={markdown}
  />
  {
    () => {
      description && (
        <div
          class="mt-2 text-sm text-slate-500 leading-relaxed prose"
          id={`${slug}-description}`}
          set:html={markdown}
        />
      );
    }
  }
  <select
    id={slug}
    name={slug}
    disabled={disabled}
    class="mt-1 block w-full rounded-md border-slate-300 py-2 pl-3 pr-10 text-base focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm disabled:cursor-not-allowed disabled:border-slate-200 disabled:bg-slate-100 disabled:text-slate-500"
  >
    {
      options.map((option) => (
        <option
          value={option.code ? option.code : option.slug}
          selected={option.slug == alias && "selected"}
        >
          {option.name}
        </option>
      ))
    }
  </select>
</div>
