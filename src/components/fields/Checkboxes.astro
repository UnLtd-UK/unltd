---
const { name, description, slug, required, options, disabled, number } =
  Astro.props;
import { marked } from "marked";
marked.use({ mangle: false, headerIds: false });
let markdown;
if (description != null) {
  markdown = marked.parse(description);
}
---

<fieldset>
  <div class="flex justify-between">
    <legend class="block text-sm font-medium text-gray-700"
      ><span class="text-gray-400 text-sm mr-1">{number}.</span> {name}</legend
    >
    <span class="text-sm text-gray-400" id="email-required"
      >{required == true && `Required`}</span
    >
  </div>
  <div
    class="mt-2 text-sm text-gray-500 leading-relaxed prose"
    id={`${slug}-description}`}
    set:html={markdown}
  />
  <div class="mt-4 divide-y divide-gray-200 border-t border-b border-gray-200">
    {
      options.map((item) => (
        <div class="relative flex items-start py-4">
          <div class="min-w-0 flex-1 text-sm">
            <label
              for="person-1"
              class="select-none font-medium text-xs text-gray-700"
            >
              {item.name}
            </label>
          </div>
          <div class="ml-3 flex h-5 items-center">
            <input
              id="person-1"
              name="person-1"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
          </div>
        </div>
      ))
    }
  </div>
</fieldset>
