---
interface Props {
  headings: {
    id: string;
    level: number;
    text: string;
  }[];
}

const { headings } = Astro.props;
---

<div class="hidden lg:block">
  <div class="fixed top-24 right-8 w-64 max-h-[calc(100vh-8rem)] overflow-y-auto">
    <nav class="space-y-1 bg-violet-950/50 p-4 rounded-xl backdrop-blur-sm">
      <h2 class="font-semibold text-violet-200 mb-4">Table of Contents</h2>
      <ul class="space-y-3">
        {
          headings.map((heading) => (
            <li
              style={`padding-left: ${(heading.level - 1) * 1}rem`}
              class={`text-sm ${
                heading.level === 1 ? "font-semibold" : "font-normal"
              }`}
            >
              <a
                href={`#${heading.id}`}
                class="text-violet-300 hover:text-violet-100 block transition-colors duration-200"
              >
                {heading.text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <button
      id="backToTop"
      class="fixed bottom-8 right-8 bg-violet-800 hover:bg-violet-700 text-white p-3 rounded-full shadow-lg transition-opacity duration-300 opacity-0 pointer-events-none"
      aria-label="Back to top"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M5 10l7-7m0 0l7 7m-7-7v18"
        />
      </svg>
    </button>
  </div>
</div>

<script>
  // Handle back to top button visibility
  const backToTop = document.getElementById('backToTop');
  
  if (backToTop) {
    window.addEventListener('scroll', () => {
      if (window.scrollY > 300) {
        backToTop.classList.remove('opacity-0', 'pointer-events-none');
      } else {
        backToTop.classList.add('opacity-0', 'pointer-events-none');
      }
    });

    backToTop.addEventListener('click', () => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    });
  }
</script> 