---
import Blank from "../../../layouts/Blank.astro";
import Container from "../../../layouts/Container.astro";
import AsideLeft from "../../../components/application-preview/AsideLeft.astro";
import Main from "../../../components/application-preview/Main.astro";
import AsideRight from "../../../components/application-preview/AsideRight.astro";
import { pb_applications } from "../../../data/applications.js";
import { pb_sections } from "../../../data/sections.js";
import { pb_fields } from "../../../data/fields.js";

Astro.props;

export async function getStaticPaths() {
  const namee = "Awards application preview";
  const slugg = "application-preview";
  const descriptionn =
    "Preview your application form or download the questions so that you can prepare your application before you sign up for an Award account";

  const breadcrumbs = [
    {
      name: "Awards",
      slug: "/awards",
    },
    {
      name: namee,
      slug: `/awards/${slugg}`,
    },
  ];
  function sectionsMapper(parents, parentNames, childs, childNames) {
    return parents.map((parent) => {
      parent[childNames] = [];
      childs.map((child) => {
        if (child[parentNames].length == 1 && child[parentNames] == parent.id) {
          parent[childNames].push(child);
        } else if (child[parentNames].length > 1) {
          childs.map((childw) => {
            if (childw[parentNames] == parent.id) {
              parent[childNames].push(child);
            }
          });
        }
      });
      return parent;
    });
  }

  function fieldsMapper(applications) {
    return applications.map((application) => {
      application.sections.map((section) => {
        section.fields = [];
        pb_fields.map((field) => {
          if (
            field["sections"].length == 1 &&
            field["sections"] == section.id
          ) {
            section["fields"].push(field);
          } else if (field["sections"].length > 1) {
            field["sections"].map((fieldw) => {
              if (fieldw == section.id) {
                section["fields"].push(field);
              }
            });
          }
        });
      });
      return application;
    });
  }

  let applicationWithSections = sectionsMapper(
    pb_applications,
    "applications",
    pb_sections,
    "sections"
  );

  let applicationWithFields = fieldsMapper(applicationWithSections);

  const pages = [];

  applicationWithFields.forEach((app) => {
    let varuss = breadcrumbs.map((x) => x);

    // let nameLowerCase = app.name.toLowerCase();

    varuss.push({
      name: app.social_venture,
      slug: app.slug,
    });

    pages.push({
      params: { slug: app.slug },
      props: {
        name: app.name,
        description: app.description,
        application: app,
        applications: applicationWithFields,
        breadcrumbs: varuss,
      },
    });
  });

  pages.push({
    params: { slug: undefined },
    props: {
      name: namee,
      description: descriptionn,
      application: [],
      applications: applicationWithFields,
      breadcrumbs: breadcrumbs,
    },
  });

  return pages;
}

const { slugg } = Astro.params;
const { name, description, application, applications, breadcrumbs } =
  Astro.props;
---

<Blank name={name} description={description} breadcrumbs={breadcrumbs}>
  {
    application.length == 0 && (
      <Container>
        <div class="grid xs:grid-rows-3 xs:git-flow-row lg:grid-cols-12 lg:grid-flow-col gap-4 items-center">
          <div class="col-span-3 flex flex-col gap-3">
            <h2 class="text-white text-3xl font-bold">
              How long has your social venture been established?
            </h2>
          </div>
          {pb_applications.map((application) => (
            <div class="col-span-3 flex flex-col gap-4">
              <div class="flex flex-col gap-3 px-5">
                <div class="flex flex-row gap-2 items-center">
                  <p class="text-violet-300 uppercase text-xs tracking-wide ">
                    Your social venture
                  </p>
                </div>
                <p class="text-violet-50 text-sm">
                  <span class="bg-amber-600 bg-opacity-30  rounded-full px-3 py-1 -ml-3 shadow-md">
                    {application.social_venture}
                  </span>
                </p>
              </div>
              <a
                href={`/awards/application-preview/${application.slug}`}
                class="border-white border border-opacity-20 flex flex-col gap-1 justify-between rounded-md transition p-5 shadow-md hover:shadow-xl hover:scale-105 hover:bg-white hover:border-opacity-50 hover:bg-opacity-5"
              >
                <div class="flex flex-row items-center gap-2">
                  <p class="text-xs uppercase text-violet-300 tracking-wide">
                    Up to
                  </p>
                </div>
                <div class="flex flex-col gap-1">
                  <p class="text-violet-100 text-3xl font-bold">
                    {new Intl.NumberFormat("en-GB", {
                      maximumSignificantDigits: 3,
                      style: "currency",
                      currency: "GBP",
                    }).format(application.grant_amount)}
                  </p>
                  <p class="text-sm text-violet-300">
                    {application.grant_description}
                  </p>
                </div>
              </a>
            </div>
          ))}
        </div>
      </Container>
    )
  }

  {
    application.length != 0 && (
      <div class="mx-auto max-w-7xl px-6 lg:px-8 flex flex-col gap-2">
        <div class="grid gap-x-4 grid-cols-12">
          <AsideLeft application={application} />
          <div class="hidden lg:block lg:col-span-1 lg:auto-cols-fr" />
          <Main application={application} />
          <AsideRight application={application} />
        </div>
      </div>
    )
  }
</Blank>
