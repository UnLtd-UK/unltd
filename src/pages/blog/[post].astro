---
import Template from "@layouts/Template.astro";
import Container from "@components/Container.astro";
import Breadcrumbs from "@components/Breadcrumbs.astro";
import HeroPost from "@components/heroes/Post.astro";
import Content from "@components/markdoc/Content.astro";

import slugify from "slugify";
import { posts } from "@data/posts.js";

interface Post {
  title: string;
  description: string;
  tag: string;
  image: string;
  image_alt: string;
  image_caption: string;
  author_name: string;
  author_position: string;
  body: string;
  date_time: string;
  breadcrumbs: Array<{ name: string; slug: string }>;
}

export async function getStaticPaths() {
  return posts.map((post) => {
    const slug = slugify(post.title, {
      lower: true,
      strict: true,
      locale: "en",
      trim: true,
    });

    let breadcrumbs = [
      {
        name: "Blog",
        path: "/blog",
      },
      {
        name: post.title,
        path: `/blog/${slug}`,
      },
    ];

    post.breadcrumbs = breadcrumbs;

    let item = {
      params: {
        post: slug,
      },
      props: {
        post: post,
      },
    };

    return item;
  });
}

const { post } = Astro.props as { post: Post };
---

<Template
  name={post.title}
  description={post.description}
>
  <Container>
    <Breadcrumbs breadcrumbs={post.breadcrumbs} />
    <HeroPost
      name={post.title}
      description={post.description}
      tag={post.tag}
      image={{
        url: post.image,
        alt: post.image_alt,
        caption: post.image_caption,
      }}
      published={post.date_time}
      author={{ name: post.author_name, position: post.author_position }}
    />

    <Content body={post.body} />
  </Container>
</Template>
