---
import Template from "@layouts/Template.astro";
import Container from "@components/Container.astro";
import Tabs from "@components/Tabs.jsx";
import { learns } from "@data/learns.js";
import slugify from "slugify";
const uniqueUsers = [...new Set(learns.map((learn) => learn.user))];
const name = "Learn";
const slug = "learn";
const description = "Read our resources";
const breadcrumbs = [
    {
        name: name,
        slug: slug,
    },
];

export async function getStaticPaths() {
    const uniqueUsers = [...new Set(learns.map((learn) => learn.user))];
    return uniqueUsers.map((page) => {
        let item = {
            params: {
                page: slugify(page, {
                    lower: true,
                    strict: true,
                    locale: "en",
                    trim: true,
                }),
            },
            props: {
                ...page,
            },
        };

        return item;
    });
}
---

<Template name={name} description={description} breadcrumbs={breadcrumbs}>
    <Container>
        <div class="py-12 sm:py-12">
            <div class="mx-auto max-w-7xl flex flex-col gap-2">
                <div class="mx-auto max-w-2xl lg:mx-0">
                    <h2
                        class="mt-2 text-4xl font-bold tracking-tight text-violet-200 sm:text-6xl"
                    >
                        Learn
                    </h2>
                    <p class="mt-6 text-lg leading-8 text-violet-400">
                        Anim aute id magna aliqua ad ad non deserunt sunt. Qui
                        irure qui lorem cupidatat commodo. Elit sunt amet fugiat
                        veniam occaecat fugiat aliqua.
                    </p>
                </div>
            </div>
        </div>

        <!-- Filter Links -->
        <div class="flex flex-wrap gap-4 mb-8">
            <a
                href="/learn"
                class={`flex-none rounded-full px-3.5 py-2.5 text-sm font-semibold shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 border border-violet-500 ${
                    Astro.url.pathname === `/learn` ||
                    Astro.url.pathname === `/learn/`
                        ? "bg-violet-950 text-white"
                        : "bg-violet-800 text-white hover:bg-violet-500 focus-visible:outline-violet-600"
                }`}
            >
                For all
            </a>
            {
                uniqueUsers.map((user) => (
                    <a
                        href={`/learn/${slugify(user, {
                            lower: true,
                            strict: true,
                            locale: "en",
                            trim: true,
                        })}`}
                        class={`flex-none rounded-full px-3.5 py-2.5 text-sm font-semibold shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 border border-violet-500 ${
                            Astro.url.pathname ===
                            `/learn/${slugify(user, { lower: true, strict: true, locale: "en", trim: true })}`
                                ? "bg-violet-950 text-white hover:bg-violet-900"
                                : "bg-violet-800 text-white hover:bg-violet-700 focus-visible:outline-violet-600"
                        }`}
                    >
                        {user}
                    </a>
                ))
            }
        </div>

        <div class="mx-auto max-w-7xl">
            <div
                class="mx-auto mt-16 grid max-w-2xl grid-cols-1 gap-x-8 gap-y-20 lg:mx-0 lg:max-w-none lg:grid-cols-3"
            >
                {
                    learns
                        .filter(
                            (learn) =>
                                slugify(learn.user, {
                                    lower: true,
                                    strict: true,
                                    locale: "en",
                                    trim: true,
                                }) === Astro.url.pathname.split("/").pop(),
                        )
                        .map((learn) => (
                            <article class="flex flex-col items-start justify-between">
                                <div class="max-w-xl">
                                    <div class="mt-8 flex items-center gap-x-4 text-xs">
                                        <a
                                            href={`/learn/${slugify(
                                                learn.name,
                                                {
                                                    lower: true,
                                                    strict: true,
                                                    locale: "en",
                                                    trim: true,
                                                },
                                            )}`}
                                            class="relative z-10 rounded-full bg-violet-800 border-violet-500 border px-3 py-1.5 font-medium text-violet-200 hover:bg-violet-700"
                                        >
                                            {(() => {
                                                switch (
                                                    learn.user.toLowerCase()
                                                ) {
                                                    case "for volunteers":
                                                        return (
                                                            <i class="fa-solid fa-handshake-angle text-xl" />
                                                        );
                                                    case "for entrepreneurs":
                                                        return (
                                                            <i class="fa-solid fa-head-side text-xl" />
                                                        );
                                                    default:
                                                        return null;
                                                }
                                            })()}
                                            {learn.user}
                                        </a>
                                    </div>
                                    <div class="group relative">
                                        <h3 class="mt-3 text-lg/6 font-semibold text-violet-200 group-hover:text-violet-300">
                                            <a
                                                href={`/learn/${slugify(
                                                    learn.name,
                                                    {
                                                        lower: true,
                                                        strict: true,
                                                        locale: "en",
                                                        trim: true,
                                                    },
                                                )}`}
                                            >
                                                <span class="absolute inset-0" />
                                                {learn.name}
                                            </a>
                                        </h3>
                                        <p class="mt-5 line-clamp-3 text-sm/6 text-violet-400">
                                            {learn.description}
                                        </p>
                                    </div>
                                </div>
                            </article>
                        ))
                }
            </div>
        </div>
    </Container>
</Template>
