---
import Template from "../../layouts/Template.astro";
import Hero from "../../components/Hero.astro";
import Container from "../../components/Container.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";

import { fundraisers } from "../../data/fundraisers.js";

const name = "Fundraising";
const slug = "Fundraising";
const description = "Give money";
const breadcrumbs = [
  {
    name: name,
    slug: slug,
  },
];
let todayDate = moment();
import moment from "moment";
---

<Template name={name} description={description}>
  <Container>
    <Breadcrumbs breadcrumbs={breadcrumbs} />
    <Hero name={name} description={description} />

    <div class="overflow-hidden bg-white shadow sm:rounded-md">
      <ul role="list" class="divide-y divide-slate-200">
        {
          fundraisers.map((fundraiser) => (
            <li>
              <a
                href={`/fundraising/${fundraiser.slug}`}
                class={`block hover:bg-slate-50 ${
                  todayDate.isAfter(fundraiser.finish) && "ring-slate-500/10"
                }`}
              >
                <div class="flex items-center px-4 py-4 sm:px-6">
                  <div class="min-w-0 flex-1 sm:flex sm:items-center sm:justify-between">
                    <div class="truncate">
                      <div class="flex text-sm gap-2 items-center">
                        <p class="truncate font-medium text-amber-600">
                          {fundraiser.name}
                        </p>
                      </div>
                      <div class="mt-2 flex">
                        <div class="flex gap-2 items-center text-sm text-slate-500">
                          <i class="fa-regular fa-calendar text-slate-400" />
                          <span class="">
                            {() => {
                              if (
                                !todayDate.isAfter(fundraiser.start) &&
                                !todayDate.isAfter(fundraiser.finish)
                              ) {
                                return (
                                  <>
                                    Opens
                                    <time
                                      datetime={moment(fundraiser.start).format(
                                        "YYYY-MM-DD",
                                      )}
                                    >
                                      {moment(fundraiser.start).format(
                                        "dddd hh:mma, MMMM Do YYYY",
                                      )}
                                    </time>
                                  </>
                                );
                              } else if (
                                !todayDate.isAfter(fundraiser.finish)
                              ) {
                                return (
                                  <>
                                    Closes
                                    <time
                                      datetime={moment(
                                        fundraiser.finish,
                                      ).format("YYYY-MM-DD")}
                                    >
                                      {moment(fundraiser.finish).format(
                                        "dddd hh:mma, MMMM Do YYYY",
                                      )}
                                    </time>
                                  </>
                                );
                              } else {
                                return (
                                  <>
                                    Completed
                                    <time
                                      datetime={moment(
                                        fundraiser.finish,
                                      ).format("YYYY-MM-DD")}
                                    >
                                      {moment(fundraiser.finish).format(
                                        "dddd hh:mma, MMMM Do YYYY",
                                      )}
                                    </time>
                                  </>
                                );
                              }
                            }}
                          </span>
                        </div>
                      </div>
                    </div>
                    <div class="mt-4 flex-shrink-0 sm:mt-0 sm:ml-5">
                      {() => {
                        if (
                          !todayDate.isAfter(fundraiser.start) &&
                          !todayDate.isAfter(fundraiser.finish)
                        ) {
                          return (
                            <span class="inline-flex items-center rounded-full bg-orange-50 px-2 py-1 text-xs font-medium text-orange-700 ring-1 ring-inset ring-orange-600/20">
                              Coming soon
                            </span>
                          );
                        } else if (!todayDate.isAfter(fundraiser.finish)) {
                          return (
                            <span class="inline-flex items-center rounded-full bg-green-50 px-2 py-1 text-xs font-medium text-green-600 ring-1 ring-inset ring-green-500/10">
                              Active
                            </span>
                          );
                        } else {
                          return (
                            <span class="inline-flex items-center rounded-full bg-slate-50 px-2 py-1 text-xs font-medium text-slate-600 ring-1 ring-inset ring-slate-500/10">
                              Completed
                            </span>
                          );
                        }
                      }}
                    </div>
                  </div>
                  <div class="ml-5 flex-shrink-0">
                    <i class="fa-solid fa-chevron-right text-slate-400" />
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</Template>
