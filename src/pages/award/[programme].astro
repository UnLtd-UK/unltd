---
import Template from "../../layouts/Template.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import Container from "../../components/Container.astro";
import Dialog from "../../components/ui/Dialog.jsx";
import { programmeColours } from "../../data/programmeColours.js";
import Icon from "../../components/award/cards/Icon.astro";
import Partners from "../../components/award/programme/Partners.astro"

import { programmes } from "../../data/programmes.js";

import truncate from "truncate";
import moment from "moment";
import { marked } from "marked";
import slugify from "slugify";

let todayDate = moment();

export async function getStaticPaths() {

  return programmes.map((programme) => {

let slug = slugify(programme.name, {
          lower: true,
          strict: true,
          locale: "en",
          trim: true,
        });

    let breadcrumbs = [
      {
        name: "Awards",
        slug: "/award",
      },
      {
        name: programme.name,
        slug: `/award/${slug}`,
      },
    ];

    programme.breadcrumbs = breadcrumbs;

    let item = {
      params: {
        programme: slugify(slug),
      },
      props: {
        programme: programme,
      },
    };

    return item;
  });
}

const { programme } = Astro.props;
---

<Template name={programme.name} description={programme.description}>
  <Container>
    <Breadcrumbs breadcrumbs={programme.breadcrumbs} />
  </Container>
  <div
    class={`relative isolate overflow-hidden py-24 sm:py-32 bg-gradient-to-r ${programmeColours.bg1[programme.colour]}`}
  >
    <img
      src={`https://unltd.directus.app/assets/${programme.image.id}`}
      alt=""
      class="absolute inset-0 -z-10 h-full w-full object-cover object-right md:object-center brightness-50 blur-sm opacity-30"
    />
    <div
      class="hidden sm:absolute sm:-top-10 sm:right-1/2 sm:-z-10 sm:mr-10 sm:block sm:transform-gpu sm:blur-3xl"
      aria-hidden="true"
    >
      <div
        class={`aspect-[1097/845] w-[68.5625rem] bg-gradient-to-tr ${programmeColours.bg1[programme.colour]} opacity-20`}
        style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
      >
      </div>
    </div>
    <div
      class="absolute -top-52 left-1/2 -z-10 -tranviolet-x-1/2 transform-gpu blur-3xl sm:top-[-28rem] sm:ml-16 sm:tranviolet-x-0 sm:transform-gpu"
      aria-hidden="true"
    >
      <div
        class={`aspect-[1097/845] w-[68.5625rem] bg-gradient-to-tr ${programmeColours.bg1[programme.colour]} opacity-20`}
        style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
      >
      </div>
    </div>
    <div class="mx-auto max-w-7xl px-6 lg:px-8">
      <div class="col-span-4 flex flex-col gap-20 lg:flex-row">
        <div class="lg:basis-1/2 flex flex-col gap-8">
          <Icon
          icon={programme.icon}
          textColour={programmeColours.text2[programme.colour]}
          bgColour={programmeColours.bg1[programme.colour]}
          borderColour={programmeColours.border1[programme.colour]}
          />

          <div class="flex flex-col gap-3">
            <div class={`flex flex-inline items-center gap-3 ${programmeColours.text1[programme.colour]}`}>
              <i class={`fa-solid fa-award text-xl ${programmeColours.text2[programme.colour]}`}></i><span class="text-1xl tracking-widest uppercase font-bold">Award Programme</span>
            </div>
            <h1 class={`text-4xl font-bold ${programmeColours.text1[programme.colour]}`}>
              {programme.name}
            </h1>
            <p class={`text-lg leading-relaxed  ${programmeColours.text2[programme.colour]}`}>
              {programme.description}
            </p>
          </div>

          <div class="flex flex-col gap-2">
            <div>
              {
                () => {
                  if (
                    !todayDate.isAfter(programme.from) &&
                    !todayDate.isAfter(programme.till)
                  ) {
                    return (
                      <div class="flex items-center gap-2">
                        <span class="inline-flex items-center rounded-full gap-1 bg-blue-100 px-3 py-0.5 text-sm font-medium text-blue-700">
                          <i class="fa-solid fa-circle text-blue-700 text-xs" />
                          Coming soon
                        </span>
                        <p class={`text-xs ${programmeColours.text1[programme.colour]}`}>
                          Application window opens
                          {moment(programme.from).format(
                            "dddd hh:mma, MMMM Do YYYY",
                          )}
                        </p>
                      </div>
                    );
                  } else if (!todayDate.isAfter(programme.till)) {
                    return (
                      <div class="flex items-center gap-2">
                        <span class="inline-flex items-center rounded-full gap-1 bg-green-100 px-3 py-0.5 text-sm font-medium text-green-700">
                          <i class="fa-solid fa-circle text-green-700 text-xs" />
                          Open
                        </span>
                        <p class={`text-xs ${programmeColours.text1[programme.colour]}`}>
                          Application window closes
                          {moment(programme.till).format(
                            "dddd hh:mma, MMMM Do YYYY",
                          )}
                        </p>
                      </div>
                    );
                  } else {
                    return (
                      <div class="flex items-center gap-2">
                        <span class="inline-flex items-center rounded-full gap-1 bg-red-100 px-3 py-0.5 text-sm font-medium text-red-700">
                          <i class="fa-solid fa-circle text-red-700 text-xs" />
                          Closed
                        </span>
                        <p class={`text-xs ${programmeColours.text1[programme.colour]}`}>
                          Application window closed
                          {moment(programme.till).format(
                            "dddd hh:mma, MMMM Do YYYY",
                          )}
                        </p>
                      </div>
                    );
                  }
                }
              }
            </div>
          </div>

        </div>
        

        <div class="lg:basis-1/2 flex flex-col justify-center">
          <section
            class="overflow-hidden relative mx-auto p-6 lg:p-6 backdrop-blur-md bg-white/10 rounded-2xl"
          >

          { programme.video ? <iframe width="560" height="315" src={programme.video} title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
           : <blockquote class="">
              <div class={`mx-auto text-xl font-medium leading-9 ${programmeColours.text1[programme.colour]}`}>
                <span class={`${programmeColours.text2[programme.colour]}`}>"{programme.quote}"</span>
                <footer class="mt-8">
                  <div class="md:flex gap-4">
                    <!-- <img
                    class="inline-block h-14 w-14 rounded-full"
                    src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                    alt=""
                  /> -->
                    <div class="mt-3 md:mt-0 md:flex md:flex-col gap-1">
                      <div class={`text-base font-medium ${programmeColours.text2[programme.colour]}`}>
                        {programme.quote_person[0].positions_id.person.name}
                      </div>

                      <div class={`text-base font-medium ${programmeColours.text2[programme.colour]}`}>
                        {
                          `${programme.quote_person[0].positions_id.role.name}, ${programme.quote_person[0].positions_id.role.organisation.name}`
                        }
                      </div>

                      <div>
                        <span
                          class={`inline-flex items-center rounded-md ${programmeColours.bg1[programme.colour]} px-2.5 py-0.5 text-xs font-medium  ${programmeColours.text1[programme.colour]}`}
                          >{programme.name} Award Winner</span
                        >
                      </div>
                    </div>
                  </div>
                </footer>
              </div>
            </blockquote>
          }
          </section>
        </div>
      </div>
    </div>
  </div>

  <Container />

  <Partners partners={programme.partners} colour={programme.colour} />

  <div class={`flex flex-col gap-20 p-20 ${programmeColours.bg2[programme.colour]}`}>
    <div class="grid grid-cols-4 gap-20 mx-auto max-w-7xl">
      <div class="col-span-4 flex flex-col gap-10 lg:col-span-4">
        <div class="flex flex-col gap-10 lg:flex-row">
          <div class="flex flex-col basis-3/4 gap-12 px-5 2xl:px-0">

                        <div class="flex flex-col gap-2">
              <div class="relative">
                <div
                  class="absolute inset-0 flex items-center"
                  aria-hidden="true"
                >
                  <div class={`w-full border-t ${programmeColours.border1[programme.colour]}`}></div>
                </div>
                <div class="relative flex justify-start">
                  <span
                    class={`bg-white pr-3 text-3xl font-semibold leading-6 ${programmeColours.text1[programme.colour]} ${programmeColours.bg2[programme.colour]}`}
                    >What additional support is available</span
                  >
                </div>
              </div>
              {
                programme.services.map((service) => (
                  <div class="relative pl-16 basis-1/4">
                    <dt class="text-base leading-7">
                      <div
                        class={`absolute left-0 top-0 flex h-10 w-10 items-center justify-center rounded-full shadow-lg border ${programmeColours.bg1[programme.colour]} ${programmeColours.border1[programme.colour]}`}
                      >
                        <i
                          class={`${service.services_id.icon} text-md shadow-3xl ${programmeColours.text2[programme.colour]}`}
                        />
                      </div>
                      <span class={`text-base ${programmeColours.text1[programme.colour]}`}>
                        {service.services_id.name}
                      </span>
                    </dt>
                    <dd
                      class={`mt-2 text-sm leading-6 ${programmeColours.text2[programme.colour]}`}
                    >
                      {service.services_id.description}
                    </dd>
                  </div>
                ))
              }
            </div>

            <div class="flex flex-col gap-5">
              <div class="relative">
                <div
                  class="absolute inset-0 flex items-center"
                  aria-hidden="true"
                >
                  <div class={`w-full border-t ${programmeColours.border1[programme.colour]}`}></div>
                </div>
                <div class="relative flex justify-start">
                  <span
                    class={`pr-3 text-3xl font-semibold leading-6 ${programmeColours.text1[programme.colour]} ${programmeColours.bg2[programme.colour]}`}
                    >What we are looking for</span
                  >
                </div>
              </div>
              <div>
                <div class="relative">
                  <div
                    class="absolute inset-0 flex items-center"
                    aria-hidden="true"
                  >
                    <div class={`w-full border-t ${programmeColours.border1[programme.colour]}`}></div>
                  </div>
                  <div class="relative flex justify-start">
                    <span
                      class={`bg-white pr-3 text-base font-semibold leading-6 ${programmeColours.text1[programme.colour]} ${programmeColours.bg2[programme.colour]}`}
                      >Social entrepreneur</span>
                  </div>
                </div>
                <div class={`${programmeColours.text1[programme.colour]}`}>
                  <p>Age: {programme.age}</p>
                  <p>Geography: {programme.geography}</p>
                  <p>Sectors: {programme.sectors}</p>
                </div>
              </div>

              <div>
                <div class="relative">
                  <div
                    class="absolute inset-0 flex items-center"
                    aria-hidden="true"
                  >
                    <div class={`w-full border-t ${programmeColours.border1[programme.colour]}`}></div>
                  </div>
                  <div class="relative flex justify-start">
                    <span
                      class={`bg-white pr-3 text-base font-semibold leading-6 ${programmeColours.text1[programme.colour]} ${programmeColours.bg2[programme.colour]}`}
                      >Social enterprise</span
                    >
                  </div>
                </div>
                <div>
                  </div>
              </div>
            </div>


            <div class={`${programmeColours.bg1[programme.colour]} rounded-xl`}>
              
              <div class="mx-auto max-w-7xl px-6 py-12 lg:px-8">
                <h2
                  class={`text-3xl font-bold tracking-tight sm:text-4xl ${programmeColours.text1[programme.colour]}`}
                >
                  Join {programme.name}
                </h2>

                { programme.video &&
                                        <blockquote class={`outline outline-offset-2 outline-${programme.colour}-200 p-6 rounded-xl mt-4`}>
              <div class="mx-auto text-xl font-medium leading-9 text-violet-900">
                <span class={`text-${programme.colour}-900`}>"{programme.quote}"</span>
                <footer class="mt-8">
                  <div class="md:flex gap-4">
                    <div class="mt-3 md:mt-0 md:flex md:flex-col gap-1">
                      <div class={`text-base font-medium text-${programme.colour}-900`}>
                        {programme.quote_person[0].positions_id.person.name}
                      </div>

                      <div class={`text-base font-medium text-${programme.colour}-700`}>
                        {
                          `${programme.quote_person[0].positions_id.role.name}, ${programme.quote_person[0].positions_id.role.organisation.name}`
                        }
                      </div>

                      <div>
                        <span
                          class={`inline-flex items-center rounded-md bg-${programme.colour}-50 px-2.5 py-0.5 text-xs font-medium text-${programme.colour}-800`}
                          >{programme.name} Awards Winner</span
                        >
                      </div>
                    </div>
                  </div>
                </footer>
              </div>
            </blockquote> }

                <div class="mt-10 flex items-center gap-x-6">
                  <a
                    href="/award"
                    class={`text-sm font-semibold leading-6 ${programmeColours.text2[programme.colour]}`}
                    >Learn more about Award <span aria-hidden="true">→</span
                    ></a
                  >
                </div>
              </div>
            </div>
          </div>
          <div class="flex flex-col basis-1/4 gap-10 px-5 2xl:px-0">
            <div class="flex flex-col gap-10">
              <!-- Article -->
              { programme.post && 
              <div class="flex flex-col gap-3">
                <h3 class="font-bold text-violet-500">Related posts</h3>
                <article
                  class="relative isolate flex flex-col justify-end overflow-hidden rounded-2xl bg-violet-900 px-8 pb-8 pt-80 sm:pt-48 lg:pt-80"
                >
                  <img
                    src={programme.post.image}
                    alt=""
                    class="absolute inset-0 -z-10 h-full w-full object-cover"
                  />
                  <div
                    class={`absolute inset-0 -z-10 bg-gradient-to-t from-${programme.colour}-900 via-violet-900/40`}
                  >
                  </div>
                  <div
                    class="absolute inset-0 -z-10 rounded-2xl ring-1 ring-inset ring-violet-900/10"
                  >
                  </div>

                  <div
                    class="flex flex-wrap items-center gap-y-1 overflow-hidden text-sm leading-6 text-violet-300"
                  >
                    <div class="-ml-4 flex items-center gap-x-4">
                      <svg
                        viewBox="0 0 2 2"
                        class="-ml-0.5 h-0.5 w-0.5 flex-none fill-white/50"
                      >
                        <circle cx="1" cy="1" r="1"></circle>
                      </svg>
                      <div class="flex gap-x-2.5">
                        By {programme.post.author}
                      </div>
                    </div>
                  </div>
                  <h3 class="mt-3 text-lg font-semibold leading-6 text-white">
                    <a href={programme.post.link}>
                      <span class="absolute inset-0"></span>
                      {programme.post.title}
                    </a>
                  </h3>
                </article>
              </div>
              }

              <!-- Other programmes -->
              <div class="flex flex-col gap-4 lg:flex">
                <h3 class="font-bold text-slate-100">Other programmes</h3>
                <div class="flex flex-col gap-3 ">
                  {
                    programmes
                      .filter(
                        (programmei) =>
                          !(programmei.name === programme.name) &&
                          todayDate.isBefore(programmei.till) &&
                          todayDate.isAfter(programmei.from),
                      )
                      .map((programme) => (
                        <a
                          href={`/award/${slugify(programme.name, {lower: true, strict: true, locale: "en", trim: true,})}`}
                          class={`border border-violet-100 p-6 rounded-2xl flex flex-col gap-5 hover:border-${programme.colour}-200 transition bg-slate-100`}
                        >
                          <div class="flex flex-col gap-2">

          <Icon
          icon={programme.icon}
          textColour={programmeColours.text2[programme.colour]}
          bgColour={programmeColours.bg1[programme.colour]}
          borderColour={programmeColours.border1[programme.colour]}
          />
                            <div>
                              <h3 class={`text-lg font-bold ${programmeColours.text1[programme.colour]}`}>
                                {programme.name}
                              </h3>
                              <p class={`text-xs leading-relaxed ${programmeColours.text2[programme.colour]}`}>
                                {truncate(programme.description, 100)}
                              </p>
                            </div>
                          </div>
                        </a>
                      ))
                  }
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Template>
